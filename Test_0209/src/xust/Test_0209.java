package xust;

/*
1. 数字的补数
给定一个正整数，输出它的补数。补数是对该数的二进制表示取反。
注意:
给定的整数保证在32位带符号整数的范围内。
你可以假定二进制数不包含前导零位。

示例 1:
输入: 5
输出: 2
解释: 5的二进制表示为101（没有前导零位），其补数为010。所以你需要输出2。

示例 2:
输入: 1
输出: 0
解释: 1的二进制表示为1（没有前导零位），其补数为0。所以你需要输出0。
 */
public class Test_0209 {
	public static void main(String[] args) {
		Solution So = new Solution();
		int num = 5;
		System.out.println(So.findComplement(num));
	}
}
class Solution {
    public int findComplement(int num) {
    	int temp = num;
    	int temp2 = 1;
    	while(temp!=0){
    		temp/=2;
    		temp2*=2;
    	}
        return num ^ (temp2-1);
    }
}